#!/usr/bin/env php
<?php
/**
 * if we're running from phar load the phar autoload,
 * else let the script 'robo' search for the autoloader
 */
if (Phar::running(false) != '')
{
	require_once Phar::running(true) . '/vendor/autoload.php';
}
else
{
	if (file_exists(__DIR__ . '/vendor/autoload.php'))
	{
		require_once __DIR__ . '/vendor/autoload.php';
	}
	elseif (file_exists(__DIR__ . '/../../autoload.php'))
	{
		require_once __DIR__ . '/../../autoload.php';
	}
}

class MyRunner extends \Robo\Runner
{
	protected function loadRoboFile()
	{
		$roboFile = Phar::running(false) != '' ? Phar::running(true) . '/' : '';
		$roboFile .= self::ROBOFILE;

		if (!file_exists($roboFile))
		{
			$this->writeln("<comment>  " . self::ROBOFILE . " not found in this dir </comment>");
			$answer = $this->ask("  Should I create RoboFile here? (y/n)  \n");
			if (strtolower(trim($answer)) === 'y')
			{
				$this->initRoboFile();
			}
			exit;
		}

		require_once $roboFile;

		if (!class_exists(self::ROBOCLASS))
		{
			$this->writeln("<error>Class " . self::ROBOCLASS . " was not loaded</error>");

			return false;
		}

		return true;
	}
}

$runner = new \MyRunner();
$runner->execute();